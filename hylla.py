import click
import shutil
import os

# an object used to send config data to every command
class Config(object):
     def __init__(self):
         self.location = False
pass_config = click.make_pass_decorator(Config, ensure=True)

@click.group()
@click.option('--location',
              envvar='HYLLA_LOCATION',
              type=click.Path(exists=True))
@click.option('--open-docs', is_flag=True,)
@pass_config
def cli(config, location, open_docs):
    '''Hylla. Organize all your projects from the command-line'''
    config.location = location
    if open_docs:
        click.launch("https://www.github.com/adelhult/hylla")
        exit()

# 'New' command:
@cli.command('new')
@click.argument('name')
@click.argument('tags', nargs=-1)
@click.option('--readme-template',
             envvar='HYLLA_README_TEMPLATE',
             type=click.Path(exists=True))
@pass_config
def new(config, name, tags, readme_template):
    '''Description for the "new" command'''

    project_name = name.strip().lower().replace(' ', '_')
    project_dir = os.path.join(config.location, project_name)

    click.echo(f'Project name: {project_name}')
    click.echo(f'Tags: {tags}')

    if not os.path.exists(project_dir):
        os.mkdir(project_dir)
        click.echo('Created project dir')
    else:
        click.echo('Project dir already exists')
        # should do more stuff here if that is the case!
    create_readme(readme_template, project_dir, project_name)


def create_readme(template_path, project_dir, project_name):
    file_path = os.path.join(project_dir, 'README.md')
    if not os.path.isfile(file_path):
        if template_path:
            shutil.copyfile(template_path, file_path)
            click.echo('Created a README file based on the provided template')
        else:
            with open(file_path, 'w') as f:
                f.write(f'# {project_name}\n\n## TODO\n\n## Hylla\n\nThis file was generated by [Hylla](https://github.com/adelhult/hylla). If you wish to use a template of your own. Specifiy the environmental varible HYLLA_README_TEMPLATE.')
            click.echo('Created a standard README file')
    else:
        click.echo('The README does already exist')


@cli.command('list')
def list():
    '''Description for the "list" command'''
    click.secho('Hello World!', fg='green')
    click.secho('Some more text', bg='blue', fg='white')
    #message = click.edit()

if __name__ == '__main__':
    cli()
